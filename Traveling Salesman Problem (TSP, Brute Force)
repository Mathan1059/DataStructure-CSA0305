#include <stdio.h>
#define INF 999
#define V 4

int min(int a, int b) { return (a < b) ? a : b; }

int tsp(int graph[V][V], int mask, int pos, int dp[V][1<<V]) {
    if (mask == (1<<V)-1) return graph[pos][0];
    if (dp[pos][mask] != -1) return dp[pos][mask];

    int ans = INF;
    for (int city = 0; city < V; city++) {
        if ((mask&(1<<city))==0)
            ans = min(ans, graph[pos][city] +
                tsp(graph, mask|(1<<city), city, dp));
    }
    return dp[pos][mask] = ans;
}

int main() {
    int graph[V][V] = {
        {0, 20, 42, 25},
        {20, 0, 30, 34},
        {42, 30, 0, 10},
        {25, 34, 10, 0}
    };
    int dp[V][1<<V];
    for(int i=0;i<V;i++)
        for(int j=0;j<(1<<V);j++)
            dp[i][j] = -1;

    printf("Minimum TSP cost: %d\n", tsp(graph, 1, 0, dp));
    return 0;
}
